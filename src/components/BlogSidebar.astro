---
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

interface Props {
	currentSlug?: string;
}

const { currentSlug } = Astro.props;

// Get all blog posts
const allPosts = await getCollection('blog');
const sortedPosts = allPosts
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Filter out current post and get latest 4 posts
const recentPosts = sortedPosts
	.filter(post => post.id !== currentSlug)
	.slice(0, 4);

// Get unique categories with post counts
const categoryMap = new Map();
allPosts.forEach(post => {
	const category = post.data.category || 'General';
	categoryMap.set(category, (categoryMap.get(category) || 0) + 1);
});

const categories = Array.from(categoryMap.entries())
	.sort((a, b) => b[1] - a[1]); // Sort by post count
---

<aside class="blog-sidebar">
	<div class="sidebar-section">
		<h3 class="sidebar-title">Recent Posts</h3>
		<div class="recent-posts">
			{recentPosts.length > 0 ? (
				recentPosts.map((post) => (
					<article class="recent-post">
						<a href={`/blog/${post.id}/`} class="recent-post-link">
							<h4 class="recent-post-title">{post.data.title}</h4>
							<div class="recent-post-meta">
								<span class="category-tag">{post.data.category || 'General'}</span>
								<time datetime={post.data.pubDate.toISOString()}>
									<FormattedDate date={post.data.pubDate} />
								</time>
							</div>
							<p class="recent-post-excerpt">{post.data.description}</p>
						</a>
					</article>
				))
			) : (
				<p class="no-posts">No other posts available yet.</p>
			)}
		</div>
	</div>
	
	<div class="sidebar-section">
		<h3 class="sidebar-title">Categories</h3>
		<div class="categories">
			{categories.map(([category, count]) => (
				<a href={`/blog/category/${category.toLowerCase().replace(/\s+/g, '-')}`} class="category-link">
					<span class="category-name">{category}</span>
					<span class="category-count">{count}</span>
				</a>
			))}
		</div>
	</div>
</aside>

<style>
	.blog-sidebar {
		width: 280px;
		padding: 0 1rem;
	}
	
	.sidebar-section {
		background: white;
		border-radius: 12px;
		padding: 1.5rem;
		margin-bottom: 2rem;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		border: 1px solid rgb(var(--gray-light));
	}
	
	.sidebar-title {
		font-size: 1.2rem;
		font-weight: 600;
		margin-bottom: 1rem;
		color: rgb(var(--gray-dark));
		border-bottom: 2px solid var(--accent);
		padding-bottom: 0.5rem;
	}
	
	.recent-posts {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}
	
	.recent-post {
		border-bottom: 1px solid rgb(var(--gray-light));
		padding-bottom: 1rem;
	}
	
	.recent-post:last-child {
		border-bottom: none;
		padding-bottom: 0;
	}
	
	.recent-post-link {
		text-decoration: none;
		color: inherit;
		display: block;
		transition: all 0.3s ease;
	}
	
	.recent-post-link:hover {
		transform: translateX(4px);
	}
	
	.recent-post-title {
		font-size: 1rem;
		font-weight: 600;
		margin-bottom: 0.5rem;
		color: rgb(var(--gray-dark));
		line-height: 1.3;
	}
	
	.recent-post-link:hover .recent-post-title {
		color: var(--accent);
	}
	
	.recent-post-meta {
		font-size: 0.8rem;
		color: rgb(var(--gray));
		margin-bottom: 0.5rem;
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}
	
	.no-posts {
		color: rgb(var(--gray));
		font-style: italic;
		text-align: center;
		margin: 0;
	}
	
	.recent-post-excerpt {
		font-size: 0.9rem;
		color: rgb(var(--gray));
		line-height: 1.4;
		margin: 0;
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.author-card {
		text-align: center;
	}
	
	.author-avatar {
		width: 80px;
		height: 80px;
		margin: 0 auto 1rem auto;
		border-radius: 50%;
		overflow: hidden;
		border: 3px solid var(--accent);
	}
	
	.author-avatar img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
	
	.author-info h4 {
		margin-bottom: 0.5rem;
		color: rgb(var(--gray-dark));
	}
	
	.author-info p {
		font-size: 0.9rem;
		color: rgb(var(--gray));
		line-height: 1.4;
		margin-bottom: 1rem;
	}
	
	.author-links {
		display: flex;
		gap: 0.5rem;
		justify-content: center;
	}
	
	.author-link {
		padding: 0.5rem 1rem;
		background: var(--accent);
		color: white;
		text-decoration: none;
		border-radius: 6px;
		font-size: 0.8rem;
		font-weight: 500;
		transition: all 0.3s ease;
	}
	
	.author-link:hover {
		background: var(--accent-dark);
		transform: translateY(-2px);
	}
	
	.categories {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}
	
	.category-link {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 0.75rem;
		color: rgb(var(--gray-dark));
		text-decoration: none;
		border-radius: 8px;
		transition: all 0.3s ease;
		border: 1px solid rgb(var(--gray-light));
	}
	
	.category-link:hover {
		background: var(--accent);
		color: white;
		transform: translateX(4px);
	}
	
	.category-name {
		font-weight: 500;
	}
	
	.category-count {
		background: rgb(var(--gray-light));
		color: rgb(var(--gray-dark));
		padding: 0.2rem 0.5rem;
		border-radius: 12px;
		font-size: 0.8rem;
		font-weight: 600;
		transition: all 0.3s ease;
	}
	
	.category-link:hover .category-count {
		background: rgba(255, 255, 255, 0.2);
		color: white;
	}
	
	.quick-nav {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}
	
	.nav-link {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		padding: 0.75rem;
		color: rgb(var(--gray-dark));
		text-decoration: none;
		border-radius: 8px;
		transition: all 0.3s ease;
		font-weight: 500;
	}
	
	.nav-link:hover {
		background: var(--gray-light);
		color: var(--accent);
		transform: translateX(4px);
	}
	
	.nav-icon {
		width: 20px;
		height: 20px;
		fill: currentColor;
	}
	
	@media (max-width: 1200px) {
		.blog-sidebar {
			width: 100%;
			padding: 0;
			margin-top: 2rem;
		}
		
		.sidebar-section {
			margin-bottom: 1.5rem;
		}
		
		.recent-posts {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
			gap: 1rem;
		}
		
		.categories {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
			gap: 0.5rem;
		}
	}
</style>
