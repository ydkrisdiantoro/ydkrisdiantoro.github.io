---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import type { ImageMetadata } from 'astro';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import { SITE_TITLE } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	publishDate?: Date;
	updateDate?: Date;
	author?: string;
	type?: 'website' | 'article';
	tags?: string[];
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { 
	title, 
	description, 
	image = FallbackImage, 
	publishDate,
	updateDate,
	author = 'Yayan Deka',
	type = 'website',
	tags = []
} = Astro.props;

// Create structured data
const structuredData = {
	"@context": "https://schema.org",
	"@type": type === 'article' ? "BlogPosting" : "WebPage",
	"headline": title,
	"description": description,
	"image": new URL(image.src, Astro.site).toString(),
	"url": canonicalURL.toString(),
	"datePublished": publishDate?.toISOString(),
	"dateModified": updateDate?.toISOString() || publishDate?.toISOString(),
	"author": {
		"@type": "Person",
		"name": author,
		"url": new URL('/', Astro.site).toString()
	},
	"publisher": {
		"@type": "Organization",
		"name": SITE_TITLE,
		"url": new URL('/', Astro.site).toString(),
		"logo": {
			"@type": "ImageObject",
			"url": new URL('/favicon.svg', Astro.site).toString()
		}
	}
};

if (type === 'article' && tags.length > 0) {
	structuredData.keywords = tags.join(', ');
}
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />

<!-- Favicon and Icons -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32.png" />
<link rel="apple-touch-icon" sizes="192x192" href="/icon-192.png" />
<link rel="icon" type="image/png" sizes="192x192" href="/icon-192.png" />
<link rel="icon" type="image/png" sizes="512x512" href="/icon-512.png" />
<link rel="manifest" href="/manifest.json" />

<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<!-- <link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin /> -->

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
{author && <meta name="author" content={author} />}
{tags.length > 0 && <meta name="keywords" content={tags.join(', ')} />}
{publishDate && <meta name="article:published_time" content={publishDate.toISOString()} />}
{updateDate && <meta name="article:modified_time" content={updateDate.toISOString()} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type === 'article' ? 'article' : 'website'} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content={SITE_TITLE} />
{publishDate && <meta property="article:published_time" content={publishDate.toISOString()} />}
{updateDate && <meta property="article:modified_time" content={updateDate.toISOString()} />}
{author && <meta property="article:author" content={author} />}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />
<meta property="twitter:image:alt" content={title} />

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
